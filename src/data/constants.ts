export const MAXIMUM_DATASET_UPLOAD_SIZE = 300 * 1024 * 1024

export const SUPPORTED_FILE_TYPES = [{name: 'csv', extension: 'csv'}, {name: 'json', extension: 'json'}, {
  name: 'xlsx',
  extension: 'xlsx'
}, {name: 'yaml', extension: 'yaml'}]
export const featureNameMap: Record<string, string> = {
  Rk: "Rank",
  Player: "Player Name",
  Nation: "Nationality",
  Pos: "Position",
  Squad: "Squad",
  Age: "Age",
  Born: "Year Born",
  "90s": "Minutes Played (in 90s)",
  Gls: "Goals",
  Sh: "Shots",
  SoT: "Shots on Target",
  "SoT%": "Shots on Target Percentage",
  "Sh/90": "Shots per 90 Minutes",
  "SoT/90": "Shots on Target per 90 Minutes",
  "G/Sh": "Goals per Shot",
  "G/SoT": "Goals per Shot on Target",
  Dist: "Average Shot Distance",
  FK: "Free Kicks",
  PK: "Penalty Kicks",
  PKatt: "Penalty Kicks Attempted",
  xG: "Expected Goals",
  npxG: "Non-Penalty Expected Goals",
  "npxG/Sh": "Non-Penalty Expected Goals per Shot",
  "G-xG": "Goals minus Expected Goals",
  "np:G-xG": "Non-Penalty Goals minus Expected Goals",
  Cmp: "Passes Completed",
  Att: "Passes Attempted",
  "Cmp%": "Pass Completion Percentage",
  TotDist: "Total Passing Distance",
  PrgDist: "Progressive Passing Distance",
  "Cmp.1": "Short Passes Completed",
  "Att.1": "Short Passes Attempted",
  "Cmp%.1": "Short Pass Completion Percentage",
  "Cmp.2": "Medium Passes Completed",
  "Att.2": "Medium Passes Attempted",
  "Cmp%.2": "Medium Pass Completion Percentage",
  "Cmp.3": "Long Passes Completed",
  "Att.3": "Long Passes Attempted",
  "Cmp%.3": "Long Pass Completion Percentage",
  Ast: "Assists",
  xAG: "Expected Assisted Goals",
  xA: "Expected Assists",
  "A-xAG": "Assists minus Expected Assisted Goals",
  KP: "Key Passes",
  PPA: "Passes into Penalty Area",
  CrsPA: "Crosses into Penalty Area",
  PrgP: "Progressive Passes",
  CrdY: "Yellow Cards",
  CrdR: "Red Cards",
  "2CrdY": "Second Yellow Cards",
  Fls: "Fouls Committed",
  Fld: "Fouls Drawn",
  Off: "Offsides",
  Crs: "Crosses",
  Int: "Interceptions",
  TklW: "Tackles Won",
  PKwon: "Penalties Won",
  PKcon: "Penalties Conceded",
  OG: "Own Goals",
  Recov: "Ball Recoveries",
  Won: "Aerial Duels Won",
  Lost: "Aerial Duels Lost",
  "Won%": "Aerial Duel Win Percentage",
  Live: "Live Ball Passes",
  Dead: "Dead Ball Passes",
  TB: "Through Balls",
  Sw: "Switches",
  TI: "Throw-Ins",
  CK: "Corner Kicks",
  In: "Inswinging Corner Kicks",
  Out: "Outswinging Corner Kicks",
  Str: "Straight Corner Kicks",
  Blocks: "Blocks",
  SCA: "Shot-Creating Actions",
  SCA90: "Shot-Creating Actions per 90 Minutes",
  PassLive: "Live Ball Passes",
  PassDead: "Dead Ball Passes",
  TO: "Turnovers",
  Def: "Defensive Actions",
  GCA: "Goal-Creating Actions",
  GCA90: "Goal-Creating Actions per 90 Minutes",
  "PassLive.1": "Live Ball Passes",
  "PassDead.1": "Dead Ball Passes",
  "TO.1": "Turnovers",
  "Sh.1": "Shots",
  "Fld.1": "Fouls Drawn",
  "Def.1": "Defensive Actions",
  Tkl: "Tackles",
  "Def 3rd": "Defensive Third Tackles",
  "Mid 3rd": "Middle Third Tackles",
  "Att 3rd": "Attacking Third Tackles",
  "Tkl.1": "Tackles",
  "Tkl%": "Tackle Percentage",
  Pass: "Passes",
  "Tkl+Int": "Tackles plus Interceptions",
};
export const getReadableFeatureName = (abbrev: string): string => {
  // Check if the abbreviation is in the map
  if (featureNameMap[abbrev]) {
    return `${featureNameMap[abbrev]} (${abbrev})`;
  }

  // Handle cases like "Cmp.1", "Cmp.2", etc.
  const baseAbbrev = abbrev.split('.')[0];
  if (featureNameMap[baseAbbrev]) {
    return `${featureNameMap[baseAbbrev]} (${abbrev})`;
  }

  // If no mapping is found, return the abbreviation as is
  return abbrev;
};